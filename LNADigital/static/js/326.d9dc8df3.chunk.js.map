{"version":3,"file":"static/js/326.d9dc8df3.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled(\"button\")<any>`\n  background: ${(p) => p.color || \"#212738ff\"};\n  color: ${(p) => (p.color ? \"#212738ff\" : \"#fff\")};\n  font-size: 1rem;\n  font-weight: 700;\n  width: 100%;\n  border: 1px solid #edf3f5;\n  border-radius: 4px;\n  padding: 13px 0;\n  cursor: pointer;\n  margin-top: 0.625rem;\n  max-width: 180px;\n  transition: all 0.3s ease-in-out;\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: #fff;\n    border: 1px solid rgb(187, 0, 0);\n    background-color: rgb(187, 0, 0);\n  }\n`;\n","import { StyledButton } from \"./styles\";\nimport { ButtonProps } from \"../types\";\n\nexport const Button = ({\n  color,\n  fixedWidth,\n  children,\n  onClick,\n  className\n}: ButtonProps) => (\n  <StyledButton color={color} className={className} fixedWidth={fixedWidth} onClick={onClick}>\n    {children}\n  </StyledButton>\n);\n","import styled from \"styled-components\";\n\nexport const LeftContentSection = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 0.5rem;\n`;\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper,\n  ServiceWrapper,\n  MinTitle,\n  MinPara,\n} from \"./styles\";\n\nconst LeftContentBlock = ({\n  icon,\n  title,\n  content,\n  section,\n  t,\n   width,\n  height,\n    imgId,\nrowClass,\n\n  id,\n}: ContentBlockProps) => {\n  return (\n    <LeftContentSection id={id}>\n      <Fade direction=\"left\">\n        <Row justify=\"space-between\" align=\"middle\" className={rowClass} >\n         <Col lg={11} md={11} sm={12} xs={24}>\n          {icon === ''  ?   '' : \n            <SvgIcon   className=\"\" imgId={imgId} src={icon} width={width} height={height} />\n          }\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n              <ServiceWrapper>\n                <Row justify=\"space-between\">\n                  {typeof section === \"object\" &&\n                    section.map((item: any, id: number) => {\n                      return (\n                        <Col className=\"iconCol\" key={id} span={11}>\n                          <SvgIcon className=\"iconImgCol\" imgId=\"\" src={item.icon} width=\"60px\" height=\"60px\" />\n                          <MinTitle className=\"iconTitleCol\" >{t(item.title)}</MinTitle>\n                          <MinPara className=\"iconContent\">{t(item.content)}</MinPara>\n                        </Col>\n                      );\n                    })}\n                </Row>\n              </ServiceWrapper>\n            </ContentWrapper>\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n  );\n};\n\nexport default withTranslation()(LeftContentBlock);\n","import styled from \"styled-components\";\n\nexport const RightBlockContainer = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 0 6rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 0 3rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-bottom: 4rem;\n  }\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { Button } from \"../../../common/Button\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  RightBlockContainer,\n  Content,\n  ContentWrapper,\n  ButtonWrapper,\n} from \"./styles\";\n\nconst RightBlock = ({\n  title,\n  content,\n  button,\n  icon,\n  t,\n  imgId,\n  width,\n  height,\n  rowClass,\n  id,\n}: ContentBlockProps) => {\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n  return (\n    <RightBlockContainer id={id} >\n      <Fade direction=\"right\">\n        <Row justify=\"space-between\" align=\"middle\" className={rowClass}>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n              <ButtonWrapper>\n                {typeof button === \"object\" &&\n                  button.map((item: any, id: number) => {\n                    return (\n                      <Button\n                      className=\"\"\n                        key={id}\n                        color={item.color}\n                        fixedWidth={true}\n                        onClick={() => scrollTo(\"services\")}\n                      >\n                        {t(item.title)}\n                      </Button>\n                    );\n                  })}\n              </ButtonWrapper>\n            </ContentWrapper>\n          </Col>\n         \n          {icon === ''  ?   '' : \n           <Col lg={11} md={11} sm={12} xs={24}>\n            <SvgIcon  className=\"\" imgId={imgId} src={icon} width={width} height={height} />\n                </Col>\n          }\n      \n        </Row>\n      </Fade>\n    </RightBlockContainer>\n  );\n};\n\nexport default withTranslation()(RightBlock);\n","import LeftContentBlock from \"./LeftContentBlock\";\nimport RightContentBlock from \"./RightContentBlock\";\nimport { ContentBlockProps } from \"./types\";\n\nconst ContentBlock = (props: ContentBlockProps) => {\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\n  return null;\n};\n\nexport default ContentBlock;\n"],"names":["StyledButton","styled","p","color","Button","fixedWidth","children","onClick","className","LeftContentSection","Content","ContentWrapper","ServiceWrapper","MinTitle","MinPara","withTranslation","icon","title","content","section","t","width","height","imgId","rowClass","id","direction","justify","align","lg","md","sm","xs","SvgIcon","src","map","item","span","RightBlockContainer","ButtonWrapper","button","document","getElementById","scrollIntoView","behavior","scrollTo","props","type","RightContentBlock"],"sourceRoot":""}